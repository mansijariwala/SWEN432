var skills = db.reserves.distinct ('reserves.sailor.skills', {'reserves.sailor.name': "Paul"}) ;

var myArray = [];
db.reserves.aggregate ([  {$match: { 'reserves.boat.driven_by' :  {$exists:true}  }} ,
  {$match: { 'reserves.boat.driven_by':  {"$not": {"$elemMatch": {"$nin" : skills }}}   }} ,
  {$project: { boat:  '$reserves.boat.name' , _id:0 }}]).forEach(function(row){
    myArray.push(row.boat)
  });

 myArray.filter ( function (value, index, self) {  return self.indexOf(value) === index;}) ;







//Bonus :
var av  =  db.reserves.aggregate ([  {$match: {'reserves.sailor.sailorId':  {$exists:true}}} ,
 {$group : {_id : '$reserves.sailor.sailorId',   "no_of_reserves" : {$sum : 1} }} ,
  {$group : {_id : null  ,    avg_reserves: {$avg:"$no_of_reserves"} }} ,
 {$sort : {"no_of_reserves" : -1}} ,
 {$project:{_id:0 , avg_reserves :1}}
 ]).map( function(u) { return u.avg_reserves } );;


 db.reserves.aggregate ([  {$match: {'reserves.sailor.sailorId':  {$exists:true}}} ,
 {$group : {_id : '$reserves.sailor.sailorId', name:{$first:'$reserves.sailor.name'} , "no_of_reserves" : {$sum : 1}  }} ,
 {$match : { no_of_reserves: {$gt: parseFloat(av)} }} ,
 {$sort : {"no_of_reserves" : -1}}
 ]);
